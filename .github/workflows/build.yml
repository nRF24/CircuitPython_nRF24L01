name: Build CI

on:
  pull_request:
    types: [opened, reopened]
  push:

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: actions/checkout@v4

      - name: Build wheel
        run: pip wheel -w dist --no-deps .

      - name: check dist
        run: pipx run twine check dist/*

      - name: Archive wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: ${{ github.workspace }}/dist/

  linters:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/setup-python@v5
        id: python-setup
        with:
          python-version: "3.x"

      - uses: actions/checkout@v4

      - name: Cache pre-commit environments
        uses: actions/cache@v4
        with:
          path: '~/.cache/pre-commit'
          key: pre-commit-${{ steps.python-setup.outputs.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit and deps
        run: pip install pre-commit -r requirements.txt

      - name: Setup problem matchers
        uses: adafruit/circuitpython-action-library-ci-problem-matchers@v1

      - name: Pre-commit hooks
        run: pre-commit run --all-files

  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install testing tools
        run: pip install -r requirements.txt -r tests/requirements.txt

      - name: Collect coverage
        run: |
          coverage run -m pytest
          coverage report
          coverage xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./coverage.xml
          verbose: true # optional (default = false)

  build-bundles:
    runs-on: ubuntu-latest
    steps:
      - name: Translate Repo Name For Build Tools filename_prefix
        id: repo-name
        run: |
          echo repo-name=$(
          echo ${{ github.repository }} |
          awk -F '\/' '{ print tolower($2) }' |
          tr '_' '-'
          ) >> $GITHUB_OUTPUT

      - name: Translate Repo Name For Build Tools package_prefix
        id: pkg-name
        run: |
          echo pkg-name=$(
          echo ${{ github.repository }} |
          awk -F '\/' '{ print tolower($2) }'
          ) >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Checkout tools repo
        uses: actions/checkout@v4
        with:
          repository: adafruit/actions-ci-circuitpython-libs
          path: actions-ci

      - name: Install deps
        run: |
          source actions-ci/install.sh

      - name: Build assets
        run: circuitpython-build-bundles --filename_prefix ${{ steps.repo-name.outputs.repo-name }} --package_folder_prefix ${{ steps.pkg-name.outputs.pkg-name }} --library_location .

      - name: Archive bundles
        uses: actions/upload-artifact@v4
        with:
          name: bundles
          path: ${{ github.workspace }}/bundles/

  build-docs:
    runs-on: ubuntu-latest
    env:
      QT_QPA_PLATFORM: offscreen
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install deps
        run: |
          pip install -r docs/requirements.txt
          pip install -e .
          sudo apt-get install libgl1-mesa-dev libxkbcommon-x11-0 graphviz

      - name: Build docs
        working-directory: docs
        run: sphinx-build -E -W -b html . _build/html

      - name: Archive docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: ${{ github.workspace }}/docs/_build/html
